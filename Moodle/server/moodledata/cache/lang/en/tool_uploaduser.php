<?php $this->cache['en']['tool_uploaduser'] = array (
  'allowdeletes' => 'Allow deletes',
  'allowrenames' => 'Allow renames',
  'allowsuspends' => 'Allow suspending and activating of accounts',
  'csvdelimiter' => 'CSV delimiter',
  'defaultvalues' => 'Default values',
  'deleteerrors' => 'Delete errors',
  'encoding' => 'Encoding',
  'errors' => 'Errors',
  'nochanges' => 'No changes',
  'pluginname' => 'User upload',
  'renameerrors' => 'Rename errors',
  'requiredtemplate' => 'Required. You may use template syntax here (%l = lastname, %f = firstname, %u = username). See help for details and examples.',
  'rowpreviewnum' => 'Preview rows',
  'uploadpicture_baduserfield' => 'The user attribute specified is not valid. Please, try again.',
  'uploadpicture_cannotmovezip' => 'Cannot move zip file to temporary directory.',
  'uploadpicture_cannotprocessdir' => 'Cannot process unzipped files.',
  'uploadpicture_cannotsave' => 'Cannot save picture for user {$a}. Check original picture file.',
  'uploadpicture_cannotunzip' => 'Cannot unzip pictures file.',
  'uploadpicture_invalidfilename' => 'Picture file {$a} has invalid characters in its name. Skipping.',
  'uploadpicture_overwrite' => 'Overwrite existing user pictures?',
  'uploadpicture_userfield' => 'User attribute to use to match pictures:',
  'uploadpicture_usernotfound' => 'User with a \'{$a->userfield}\' value of \'{$a->uservalue}\' does not exist. Skipping.',
  'uploadpicture_userskipped' => 'Skipping user {$a} (already has a picture).',
  'uploadpicture_userupdated' => 'Picture updated for user {$a}.',
  'uploadpictures' => 'Upload user pictures',
  'uploadpictures_help' => 'User pictures can be uploaded as a zip file of image files. The image files should be named chosen-user-attribute.extension, for example user1234.jpg for a user with username user1234.',
  'uploadusers' => 'Upload users',
  'uploadusers_help' => 'Users may be uploaded (and optionally enrolled in courses) via text file. The format of the file should be as follows:

* Each line of the file contains one record
* Each record is a series of data separated by commas (or other delimiters)
* The first record contains a list of fieldnames defining the format of the rest of the file
* Required fieldnames are username, password, firstname, lastname, email',
  'uploaduserspreview' => 'Upload users preview',
  'uploadusersresult' => 'Upload users results',
  'useraccountupdated' => 'User updated',
  'useraccountuptodate' => 'User up-to-date',
  'userdeleted' => 'User deleted',
  'userrenamed' => 'User renamed',
  'userscreated' => 'Users created',
  'usersdeleted' => 'Users deleted',
  'usersrenamed' => 'Users renamed',
  'usersskipped' => 'Users skipped',
  'usersupdated' => 'Users updated',
  'usersweakpassword' => 'Users having a weak password',
  'uubulk' => 'Select for bulk operations',
  'uubulkall' => 'All users',
  'uubulknew' => 'New users',
  'uubulkupdated' => 'Updated users',
  'uucsvline' => 'CSV line',
  'uulegacy1role' => '(Original Student) typeN=1',
  'uulegacy2role' => '(Original Teacher) typeN=2',
  'uulegacy3role' => '(Original Non-editing teacher) typeN=3',
  'uunoemailduplicates' => 'Prevent email address duplicates',
  'uuoptype' => 'Upload type',
  'uuoptype_addinc' => 'Add all, append number to usernames if needed',
  'uuoptype_addnew' => 'Add new only, skip existing users',
  'uuoptype_addupdate' => 'Add new and update existing users',
  'uuoptype_update' => 'Update existing users only',
  'uupasswordcron' => 'Generated in cron',
  'uupasswordnew' => 'New user password',
  'uupasswordold' => 'Existing user password',
  'uustandardusernames' => 'Standardise usernames',
  'uuupdateall' => 'Override with file and defaults',
  'uuupdatefromfile' => 'Override with file',
  'uuupdatemissing' => 'Fill in missing from file and defaults',
  'uuupdatetype' => 'Existing user details',
  'uuusernametemplate' => 'Username template',
);